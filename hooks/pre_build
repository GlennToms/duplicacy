#!/bin/bash

duplicacy_arch()
{
    local target=$1
    if [[ $target == "x86_64" ]]; then
        platform="x64"
    elif [[ $target == "armhf" ]]; then
        platform="arm"
    elif [[ $target == "aarch64" ]]; then
        platform="arm64"
    fi
    printf $platform
}

duplicacy_url()
{
    local repo="gilbertchen/duplicacy"
    local latest_tag=$(github_repo_latest_tag $repo)
    local version="${latest_tag:1}"
    printf "https://github.com/$repo/releases/download/$latest_tag/duplicacy_linux_$(duplicacy_arch $target)_$version"
}

my_dir="$(dirname "${BASH_SOURCE[0]}")"
source "$my_dir/_env"

docker run --rm --privileged multiarch/qemu-user-static:register --reset

for target in ${targets[*]}; do
    target_file=Dockerfile.target-$target
    cp Dockerfile.template $target_file
    sed -i -- "s/__QEMU_ARCH__/$(qemu_static_arch $target)/g" $target_file
    if [[ $target == "x86_64" ]]; then
        sed -i -- "/__CROSS_/d" $target_file
    else
        sed -i -- "s/__CROSS_//g" $target_file
    fi
    sed -i -- "s%__S6_OVERLAY__%$(s6_overlay_url $target)%g" $target_file
    sed -i -- "s%__DUPLICACY__%$(duplicacy_url $target)%g" $target_file
    sed -i -- "s%__BASEIMAGE__%$(alpine_base_image $target)%g" $target_file
done
